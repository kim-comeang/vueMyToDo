{"remainingRequest":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimbeomcheol/dev/vue-mytodo/src/components/TodoInput.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/kimbeomcheol/dev/vue-mytodo/src/components/TodoInput.vue","mtime":1623142782201},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kimbeomcheol/dev/vue-mytodo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWRkIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbWF4LXdpZHRoOiAkbWF4LXdpZHRoOwogIG1hcmdpbjogMCBhdXRvOwogIC5tYWluLWlucHV0IHsKICAgIEBpbmNsdWRlIGFuaW1hdGlvbihmYWRlU2hvdywgODAwbXMsIDEsIDkwMG1zKTsKICB9Cn0K"},{"version":3,"sources":["TodoInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoInput.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"add\">\n    <div class=\"main-input\">\n      <input\n        type=\"text\"\n        class=\"add__input\"\n        placeholder=\"Enter your task here\"\n        v-model=\"newTodoItem\"\n        v-on:keypress.enter=\"addTodoItem\"\n        ref=\"taskInput\"\n      />\n      <button class=\"add__buttonn\" v-on:click=\"addTodoItem\">\n        <span class=\"blind\">Add</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      newTodoItem: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters([\"storedTodoItems\", \"storedTodoItemsCount\"])\n  },\n  methods: {\n    addTodoItem() {\n      // 중복되는 내용인 경우\n      const oldItems = this.storedTodoItems;\n      for (let i = 0; i < this.storedTodoItemsCount; i++) {\n        if (oldItems[i].item === this.newTodoItem) {\n          const text = \"I think you've already had the task.\";\n          this.$emit(\"alertModal\", text);\n          return false;\n        }\n      }\n      // 빈 내용인 경우\n      if (this.newTodoItem === \"\") {\n        const text = \"The form is empty. Please note your task.\";\n        this.$emit(\"alertModal\", text);\n        this.clearInput();\n        return false;\n      }\n      this.$store.commit(\"addOneItem\", this.newTodoItem);\n      this.clearInput();\n      this.$refs.taskInput.focus();\n    },\n    clearInput() {\n      this.newTodoItem = \"\";\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.add {\n  position: relative;\n  max-width: $max-width;\n  margin: 0 auto;\n  .main-input {\n    @include animation(fadeShow, 800ms, 1, 900ms);\n  }\n}\n</style>"]}]}